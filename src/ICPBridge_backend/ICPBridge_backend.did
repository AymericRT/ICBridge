type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : nat64; Err : text };
service : {
  data_history : () -> (vec text) query;
  get_address : () -> (Result);
  get_balance : (opt text) -> (Result);
  get_balance_usdc : (opt text) -> (Result);
  get_batch_balances : (vec text) -> (Result);
  get_latest_block : () -> (Result_1);
  send_eth : () -> (Result);
  send_eth_with_fillers : () -> (Result);
  sign_message : (text) -> (Result);
  start_timer : () -> ();
  start_timer_base : () -> ();
  watch_usdc_transfer_start : () -> (Result);
  watch_usdc_transfer_start_base : () -> (Result);
  watch_usdc_transfer_stop : () -> (Result);
}
